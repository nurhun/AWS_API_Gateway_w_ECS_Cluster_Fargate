openapi: "3.0.2"
info:
  title: Movies API Schema
  version: ''
  description: Guide for the REST Movies API
paths:
  /api/v1/movie:
    get:
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        connectionId: ${ECS_SRV_ARN}
        # connectionId: "tlrcl6"
        type: "http_proxy"
        httpMethod: "ANY"
        uri: ${API_GATEWAY_VPC_LINK_ID}
        # uri: "arn:aws:servicediscovery:eu-north-1:521156286538:service/srv-mys3kibpwyxqea2f"
        connectionType: "VPC_LINK"
      operationId: listMovies
      description: A simple ModelViewSet.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Movie'
          description: ''
      tags:
      - api
    post:
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        connectionId: ${ECS_SRV_ARN}
        type: "http_proxy"
        httpMethod: "ANY"
        uri: ${API_GATEWAY_VPC_LINK_ID}
        connectionType: "VPC_LINK"
      operationId: createMovie
      description: A simple ModelViewSet.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movie'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Movie'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Movie'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
          description: ''
      tags:
      - api
    options:
      responses:
        default:
          description: "Default response for OPTIONS /api/v1/movie"
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        connectionId: ${ECS_SRV_ARN}
        type: "http_proxy"
        httpMethod: "ANY"
        uri: ${API_GATEWAY_VPC_LINK_ID}
        connectionType: "VPC_LINK"
  /api/v1/users/auth/user:
    get:
      responses:
        default:
          description: "Default response for GET /api/v1/users/auth/user"
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        connectionId: ${ECS_SRV_ARN}
        type: "http_proxy"
        httpMethod: "ANY"
        uri: ${API_GATEWAY_VPC_LINK_ID}
        connectionType: "VPC_LINK"
    options:
      responses:
        default:
          description: "Default response for OPTIONS /api/v1/users/auth/user"
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        connectionId: ${ECS_SRV_ARN}
        type: "http_proxy"
        httpMethod: "ANY"
        uri: ${API_GATEWAY_VPC_LINK_ID}
        connectionType: "VPC_LINK"
  /api/token:
    post:
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        connectionId: ${ECS_SRV_ARN}
        type: "http_proxy"
        httpMethod: "ANY"
        uri: ${API_GATEWAY_VPC_LINK_ID}
        connectionType: "VPC_LINK"
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - api
    options:
      responses:
        default:
          description: "Default response for OPTIONS /api/token"
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        connectionId: ${ECS_SRV_ARN}
        type: "http_proxy"
        httpMethod: "ANY"
        uri: ${API_GATEWAY_VPC_LINK_ID}
        connectionType: "VPC_LINK"
  /api/token/refresh:
    post:
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        connectionId: ${ECS_SRV_ARN}
        type: "http_proxy"
        httpMethod: "ANY"
        uri: ${API_GATEWAY_VPC_LINK_ID}
        connectionType: "VPC_LINK"
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - api
components:
  schemas:
    Movie:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        year:
          type: integer
      required:
      - title
      - year
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - username
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh

x-amazon-apigateway-importexport-version: "1.0"

x-amazon-apigateway-cors:
  allowOrigins:
    - "*"
  exposeHeaders:
    - "*"
  maxAge: 3600
  allowMethods:
    - "*"
  allowHeaders":
    - "*"
